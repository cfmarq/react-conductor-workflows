{"version":3,"sources":["webpack://projectstorm/react-diagrams-defaults/webpack/universalModuleDefinition","webpack://projectstorm/react-diagrams-defaults/webpack/bootstrap","webpack://projectstorm/react-diagrams-defaults/external \"react\"","webpack://projectstorm/react-diagrams-defaults/external \"@projectstorm/react-diagrams-core\"","webpack://projectstorm/react-diagrams-defaults/external \"@emotion/styled\"","webpack://projectstorm/react-diagrams-defaults/external \"@projectstorm/react-canvas-core\"","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelModel.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkModel.ts","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortModel.ts","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkPointWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkSegmentWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeModel.ts","webpack://projectstorm/react-diagrams-defaults/external \"lodash\"","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortLabelWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/index.ts","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkFactory.tsx","webpack://projectstorm/react-diagrams-defaults/external \"@projectstorm/geometry\"","webpack://projectstorm/react-diagrams-defaults/external \"@emotion/core\"","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortFactory.tsx"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","DefaultLabelModel","LabelModel","options","super","offsetY","type","label","this","event","deserialize","data","serialize","DefaultLinkModel","LinkModel","width","color","selectedColor","curvyness","port","getOptions","alignment","PortModelAlignment","RIGHT","LEFT","TOP","points","length","curve","BezierCurve","setSource","getFirstPoint","getPosition","setTarget","getLastPoint","setSourceControl","clone","setTargetControl","sourcePort","getSourceControl","translate","calculateControlOffset","getSourcePort","targetPort","getTargetControl","getTargetPort","getSVGCurve","addLabel","labelOb","setLabel","fireEvent","DefaultPortModel","PortModel","in","link","createLinkModel","setSourcePort","setTargetPort","generateModel","S","Label","div","DefaultLabelWidget","React","Component","props","model","DefaultLinkWidget","refPaths","state","selected","setRenderedPaths","map","ref","current","index","shiftKey","isLocked","getPoints","diagramEngine","getMaxNumberPointsPerLink","point","PointModel","position","getRelativeMousePoint","addPoint","persist","stopPropagation","forceUpdate","getActionEventBus","fireAction","DefaultLinkPointWidget","getID","colorSelected","path","extraProps","id","createRef","push","DefaultLinkSegmentWidget","getFactoryForLink","forwardRef","onSelection","setState","extras","paths","generateLink","getSVGPath","onMouseDown","addPointToLink","generatePoint","j","LinkWidget","generateLinePath","testName","PointTop","circle","cx","x","cy","y","fill","isSelected","className","onMouseLeave","onMouseEnter","getLink","opacity","Bottom","cloneElement","generateLinkSegment","Top","strokeLinecap","strokeOpacity","strokeWidth","onContextMenu","preventDefault","remove","DefaultNodeModel","NodeModel","portsOut","portsIn","lookupTable","doClone","removePort","splice","indexOf","addPort","after","_","portsInOrder","getPortFromID","portsOutOrder","Node","background","Title","TitleName","Ports","PortsContainer","DefaultNodeWidget","generatePort","DefaultPortLabel","engine","node","getInPorts","getOutPorts","PortLabel","Port","PortWidget","DefaultLabelFactory","AbstractReactFactory","Keyframes","keyframes","css","Path","DefaultLinkFactory","stroke","DefaultNodeFactory","DefaultPortFactory","AbstractModelFactory"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"projectstorm/react-diagrams-defaults\"] = factory();\n\telse\n\t\troot[\"projectstorm/react-diagrams-defaults\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","module.exports = require(\"react\");","module.exports = require(\"@projectstorm/react-diagrams-core\");","module.exports = require(\"@emotion/styled\");","module.exports = require(\"@projectstorm/react-canvas-core\");","import { DiagramEngine, LabelModel, LabelModelGenerics, LabelModelOptions } from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultLabelModelOptions extends LabelModelOptions {\n\tlabel?: string;\n}\n\nexport interface DefaultLabelModelGenerics extends LabelModelGenerics {\n\tOPTIONS: DefaultLabelModelOptions;\n}\n\nexport class DefaultLabelModel extends LabelModel<DefaultLabelModelGenerics> {\n\tconstructor(options: DefaultLabelModelOptions = {}) {\n\t\tsuper({\n\t\t\toffsetY: options.offsetY == null ? -23 : options.offsetY,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tsetLabel(label: string) {\n\t\tthis.options.label = label;\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n}\n","import {\n\tDiagramEngine,\n\tLabelModel,\n\tLinkModel,\n\tLinkModelGenerics,\n\tLinkModelListener,\n\tPortModel,\n\tPortModelAlignment\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLabelModel } from '../label/DefaultLabelModel';\nimport { BezierCurve } from '@projectstorm/geometry';\nimport { BaseEntityEvent, BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultLinkModelListener extends LinkModelListener {\n\tcolorChanged?(event: BaseEntityEvent<DefaultLinkModel> & { color: null | string }): void;\n\n\twidthChanged?(event: BaseEntityEvent<DefaultLinkModel> & { width: 0 | number }): void;\n}\n\nexport interface DefaultLinkModelOptions extends BaseModelOptions {\n\twidth?: number;\n\tcolor?: string;\n\tselectedColor?: string;\n\tcurvyness?: number;\n\ttype?: string;\n\ttestName?: string;\n}\n\nexport interface DefaultLinkModelGenerics extends LinkModelGenerics {\n\tLISTENER: DefaultLinkModelListener;\n\tOPTIONS: DefaultLinkModelOptions;\n}\n\nexport class DefaultLinkModel extends LinkModel<DefaultLinkModelGenerics> {\n\tconstructor(options: DefaultLinkModelOptions = {}) {\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\twidth: options.width || 3,\n\t\t\tcolor: options.color || 'gray',\n\t\t\tselectedColor: options.selectedColor || 'rgb(0,192,255)',\n\t\t\tcurvyness: 50,\n\t\t\t...options\n\t\t});\n\t}\n\n\tcalculateControlOffset(port: PortModel): [number, number] {\n\t\tif (port.getOptions().alignment === PortModelAlignment.RIGHT) {\n\t\t\treturn [this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.LEFT) {\n\t\t\treturn [-this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.TOP) {\n\t\t\treturn [0, -this.options.curvyness];\n\t\t}\n\t\treturn [0, this.options.curvyness];\n\t}\n\n\tgetSVGPath(): string {\n\t\tif (this.points.length == 2) {\n\t\t\tconst curve = new BezierCurve();\n\t\t\tcurve.setSource(this.getFirstPoint().getPosition());\n\t\t\tcurve.setTarget(this.getLastPoint().getPosition());\n\t\t\tcurve.setSourceControl(this.getFirstPoint().getPosition().clone());\n\t\t\tcurve.setTargetControl(this.getLastPoint().getPosition().clone());\n\n\t\t\tif (this.sourcePort) {\n\t\t\t\tcurve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\n\t\t\t}\n\n\t\t\tif (this.targetPort) {\n\t\t\t\tcurve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\n\t\t\t}\n\t\t\treturn curve.getSVGCurve();\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\twidth: this.options.width,\n\t\t\tcolor: this.options.color,\n\t\t\tcurvyness: this.options.curvyness,\n\t\t\tselectedColor: this.options.selectedColor\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.color = event.data.color;\n\t\tthis.options.width = event.data.width;\n\t\tthis.options.curvyness = event.data.curvyness;\n\t\tthis.options.selectedColor = event.data.selectedColor;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\treturn super.addLabel(label);\n\t\t}\n\t\tlet labelOb = new DefaultLabelModel();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.options.width = width;\n\t\tthis.fireEvent({ width }, 'widthChanged');\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.options.color = color;\n\t\tthis.fireEvent({ color }, 'colorChanged');\n\t}\n}\n","import {\n\tLinkModel,\n\tPortModel,\n\tPortModelAlignment,\n\tPortModelGenerics,\n\tPortModelOptions\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from '../link/DefaultLinkModel';\nimport { AbstractModelFactory, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultPortModelOptions extends PortModelOptions {\n\tlabel?: string;\n\tin?: boolean;\n}\n\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\n\tOPTIONS: DefaultPortModelOptions;\n}\n\nexport class DefaultPortModel extends PortModel<DefaultPortModelGenerics> {\n\tconstructor(isIn: boolean, name?: string, label?: string);\n\tconstructor(options: DefaultPortModelOptions);\n\tconstructor(options: DefaultPortModelOptions | boolean, name?: string, label?: string) {\n\t\tif (!!name) {\n\t\t\toptions = {\n\t\t\t\tin: !!options,\n\t\t\t\tname: name,\n\t\t\t\tlabel: label\n\t\t\t};\n\t\t}\n\t\toptions = options as DefaultPortModelOptions;\n\t\tsuper({\n\t\t\tlabel: options.label || options.name,\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.in = event.data.in;\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tin: this.options.in,\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n\n\tlink<T extends LinkModel>(port: PortModel, factory?: AbstractModelFactory<T>): T {\n\t\tlet link = this.createLinkModel(factory);\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link as T;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif (port instanceof DefaultPortModel) {\n\t\t\treturn this.options.in !== port.getOptions().in;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(factory?: AbstractModelFactory<LinkModel>): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\tif (!link && factory) {\n\t\t\treturn factory.generateModel({});\n\t\t}\n\t\treturn link || new DefaultLinkModel();\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLabelModel } from './DefaultLabelModel';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLabelWidgetProps {\n\tmodel: DefaultLabelModel;\n}\n\nnamespace S {\n\texport const Label = styled.div`\n\t\tbackground: rgba(0, 0, 0, 0.8);\n\t\tborder-radius: 5px;\n\t\tcolor: white;\n\t\tfont-size: 12px;\n\t\tpadding: 4px 8px;\n\t\tfont-family: sans-serif;\n\t\tuser-select: none;\n\t`;\n}\n\nexport class DefaultLabelWidget extends React.Component<DefaultLabelWidgetProps> {\n\trender() {\n\t\treturn <S.Label>{this.props.model.getOptions().label}</S.Label>;\n\t}\n}\n","import * as React from 'react';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkPointWidget } from './DefaultLinkPointWidget';\nimport { DefaultLinkSegmentWidget } from './DefaultLinkSegmentWidget';\nimport { MouseEvent } from 'react';\n\nexport interface DefaultLinkProps {\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends React.Component<DefaultLinkProps, DefaultLinkState> {\n\trefPaths: React.RefObject<SVGPathElement>[];\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(props);\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.props.link.setRenderedPaths([]);\n\t}\n\n\taddPointToLink(event: MouseEvent, index: number) {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.link.isLocked() &&\n\t\t\tthis.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst point = new PointModel({\n\t\t\t\tlink: this.props.link,\n\t\t\t\tposition: this.props.diagramEngine.getRelativeMousePoint(event)\n\t\t\t});\n\t\t\tthis.props.link.addPoint(point, index);\n\t\t\tevent.persist();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.forceUpdate(() => {\n\t\t\t\tthis.props.diagramEngine.getActionEventBus().fireAction({\n\t\t\t\t\tevent,\n\t\t\t\t\tmodel: point\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tgeneratePoint(point: PointModel): JSX.Element {\n\t\treturn (\n\t\t\t<DefaultLinkPointWidget\n\t\t\t\tkey={point.getID()}\n\t\t\t\tpoint={point as any}\n\t\t\t\tcolorSelected={this.props.link.getOptions().selectedColor}\n\t\t\t\tcolor={this.props.link.getOptions().color}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tconst ref = React.createRef<SVGPathElement>();\n\t\tthis.refPaths.push(ref);\n\t\treturn (\n\t\t\t<DefaultLinkSegmentWidget\n\t\t\t\tkey={`link-${id}`}\n\t\t\t\tpath={path}\n\t\t\t\tselected={this.state.selected}\n\t\t\t\tdiagramEngine={this.props.diagramEngine}\n\t\t\t\tfactory={this.props.diagramEngine.getFactoryForLink(this.props.link)}\n\t\t\t\tlink={this.props.link}\n\t\t\t\tforwardRef={ref}\n\t\t\t\tonSelection={(selected) => {\n\t\t\t\t\tthis.setState({ selected: selected });\n\t\t\t\t}}\n\t\t\t\textras={extraProps}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.getPoints();\n\t\tvar paths = [];\n\t\tthis.refPaths = [];\n\n\t\tif (points.length === 2) {\n\t\t\tpaths.push(\n\t\t\t\tthis.generateLink(\n\t\t\t\t\tthis.props.link.getSVGPath(),\n\t\t\t\t\t{\n\t\t\t\t\t\tonMouseDown: (event) => {\n\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'0'\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// draw the link as dangeling\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[1]));\n\t\t\t}\n\t\t} else {\n\t\t\t//draw the multiple anchors and complex line instead\n\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tLinkWidget.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\t\t\t\t\t'data-point': j,\n\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//render the circles\n\t\t\tfor (let i = 1; i < points.length - 1; i++) {\n\t\t\t\tpaths.push(this.generatePoint(points[i]));\n\t\t\t}\n\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[points.length - 1]));\n\t\t\t}\n\t\t}\n\n\t\treturn <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n\t}\n}\n","import * as React from 'react';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLinkPointWidgetProps {\n\tpoint: PointModel;\n\tcolor?: string;\n\tcolorSelected: string;\n}\n\nexport interface DefaultLinkPointWidgetState {\n\tselected: boolean;\n}\n\nnamespace S {\n\texport const PointTop = styled.circle`\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class DefaultLinkPointWidget extends React.Component<DefaultLinkPointWidgetProps, DefaultLinkPointWidgetState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { point } = this.props;\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<circle\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tfill={this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color}\n\t\t\t\t/>\n\t\t\t\t<S.PointTop\n\t\t\t\t\tclassName=\"point\"\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={point.getID()}\n\t\t\t\t\tdata-linkid={point.getLink().getID()}\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0.0}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLinkFactory } from './DefaultLinkFactory';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\n\nexport interface DefaultLinkSegmentWidgetProps {\n\tpath: string;\n\tlink: DefaultLinkModel;\n\tselected: boolean;\n\tforwardRef: React.RefObject<SVGPathElement>;\n\tfactory: DefaultLinkFactory;\n\tdiagramEngine: DiagramEngine;\n\tonSelection: (selected: boolean) => any;\n\textras: object;\n}\n\nexport class DefaultLinkSegmentWidget extends React.Component<DefaultLinkSegmentWidgetProps> {\n\trender() {\n\t\tconst Bottom = React.cloneElement(\n\t\t\tthis.props.factory.generateLinkSegment(\n\t\t\t\tthis.props.link,\n\t\t\t\tthis.props.selected || this.props.link.isSelected(),\n\t\t\t\tthis.props.path\n\t\t\t),\n\t\t\t{\n\t\t\t\tref: this.props.forwardRef\n\t\t\t}\n\t\t);\n\n\t\tconst Top = React.cloneElement(Bottom, {\n\t\t\tstrokeLinecap: 'round',\n\t\t\tonMouseLeave: () => {\n\t\t\t\tthis.props.onSelection(false);\n\t\t\t},\n\t\t\tonMouseEnter: () => {\n\t\t\t\tthis.props.onSelection(true);\n\t\t\t},\n\t\t\t...this.props.extras,\n\t\t\tref: null,\n\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\tstrokeOpacity: this.props.selected ? 0.1 : 0,\n\t\t\tstrokeWidth: 20,\n\t\t\tfill: 'none',\n\t\t\tonContextMenu: () => {\n\t\t\t\tif (!this.props.link.isLocked()) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.props.link.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t{Bottom}\n\t\t\t\t{Top}\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as _ from 'lodash';\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\nimport { DefaultPortModel } from '../port/DefaultPortModel';\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\n\tname?: string;\n\tcolor?: string;\n}\n\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\n\tOPTIONS: DefaultNodeModelOptions;\n}\n\nexport class DefaultNodeModel extends NodeModel<DefaultNodeModelGenerics> {\n\tprotected portsIn: DefaultPortModel[];\n\tprotected portsOut: DefaultPortModel[];\n\n\tconstructor(name: string, color: string);\n\tconstructor(options?: DefaultNodeModelOptions);\n\tconstructor(options: any = {}, color?: string) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\tname: options,\n\t\t\t\tcolor: color\n\t\t\t};\n\t\t}\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\tname: 'Untitled',\n\t\t\tcolor: 'rgb(0,192,255)',\n\t\t\t...options\n\t\t});\n\t\tthis.portsOut = [];\n\t\tthis.portsIn = [];\n\t}\n\n\tdoClone(lookupTable: {}, clone: any): void {\n\t\tclone.portsIn = [];\n\t\tclone.portsOut = [];\n\t\tsuper.doClone(lookupTable, clone);\n\t}\n\n\tremovePort(port: DefaultPortModel): void {\n\t\tsuper.removePort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\n\t\t} else {\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\n\t\t}\n\t}\n\n\taddPort<T extends DefaultPortModel>(port: T): T {\n\t\tsuper.addPort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\n\t\t\t\tthis.portsIn.push(port);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\n\t\t\t\tthis.portsOut.push(port);\n\t\t\t}\n\t\t}\n\t\treturn port;\n\t}\n\n\taddInPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: true,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.LEFT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsIn.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\taddOutPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: false,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.RIGHT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsOut.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.name = event.data.name;\n\t\tthis.options.color = event.data.color;\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t}\n\n\tserialize(): any {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tname: this.options.name,\n\t\t\tcolor: this.options.color,\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t}),\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t})\n\t\t};\n\t}\n\n\tgetInPorts(): DefaultPortModel[] {\n\t\treturn this.portsIn;\n\t}\n\n\tgetOutPorts(): DefaultPortModel[] {\n\t\treturn this.portsOut;\n\t}\n}\n","module.exports = require(\"lodash\");","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { DefaultNodeModel } from './DefaultNodeModel';\nimport { DefaultPortLabel } from '../port/DefaultPortLabelWidget';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nnamespace S {\n\texport const Node = styled.div<{ background: string; selected: boolean }>`\n\t\tbackground-color: ${(p) => p.background};\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tcolor: white;\n\t\tborder: solid 2px black;\n\t\toverflow: visible;\n\t\tfont-size: 11px;\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\n\t`;\n\n\texport const Title = styled.div`\n\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t`;\n\n\texport const TitleName = styled.div`\n\t\tflex-grow: 1;\n\t\tpadding: 5px 5px;\n\t`;\n\n\texport const Ports = styled.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\n\t`;\n\n\texport const PortsContainer = styled.div`\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\t&:first-of-type {\n\t\t\tmargin-right: 10px;\n\t\t}\n\n\t\t&:only-child {\n\t\t\tmargin-right: 0px;\n\t\t}\n\t`;\n}\n\nexport interface DefaultNodeProps {\n\tnode: DefaultNodeModel;\n\tengine: DiagramEngine;\n}\n\n/**\n * Default node that models the DefaultNodeModel. It creates two columns\n * for both all the input ports on the left, and the output ports on the right.\n */\nexport class DefaultNodeWidget extends React.Component<DefaultNodeProps> {\n\tgeneratePort = (port) => {\n\t\treturn <DefaultPortLabel engine={this.props.engine} port={port} key={port.getID()} />;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<S.Node\n\t\t\t\tdata-default-node-name={this.props.node.getOptions().name}\n\t\t\t\tselected={this.props.node.isSelected()}\n\t\t\t\tbackground={this.props.node.getOptions().color}>\n\t\t\t\t<S.Title>\n\t\t\t\t\t<S.TitleName>{this.props.node.getOptions().name}</S.TitleName>\n\t\t\t\t</S.Title>\n\t\t\t\t<S.Ports>\n\t\t\t\t\t<S.PortsContainer>{_.map(this.props.node.getInPorts(), this.generatePort)}</S.PortsContainer>\n\t\t\t\t\t<S.PortsContainer>{_.map(this.props.node.getOutPorts(), this.generatePort)}</S.PortsContainer>\n\t\t\t\t</S.Ports>\n\t\t\t</S.Node>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\nimport { DefaultPortModel } from './DefaultPortModel';\nimport styled from '@emotion/styled';\n\nexport interface DefaultPortLabelProps {\n\tport: DefaultPortModel;\n\tengine: DiagramEngine;\n}\n\nnamespace S {\n\texport const PortLabel = styled.div`\n\t\tdisplay: flex;\n\t\tmargin-top: 1px;\n\t\talign-items: center;\n\t`;\n\n\texport const Label = styled.div`\n\t\tpadding: 0 5px;\n\t\tflex-grow: 1;\n\t`;\n\n\texport const Port = styled.div`\n\t\twidth: 15px;\n\t\theight: 15px;\n\t\tbackground: rgba(white, 0.1);\n\n\t\t&:hover {\n\t\t\tbackground: rgb(192, 255, 0);\n\t\t}\n\t`;\n}\n\nexport class DefaultPortLabel extends React.Component<DefaultPortLabelProps> {\n\trender() {\n\t\tconst port = (\n\t\t\t<PortWidget engine={this.props.engine} port={this.props.port}>\n\t\t\t\t<S.Port />\n\t\t\t</PortWidget>\n\t\t);\n\t\tconst label = <S.Label>{this.props.port.getOptions().label}</S.Label>;\n\n\t\treturn (\n\t\t\t<S.PortLabel>\n\t\t\t\t{this.props.port.getOptions().in ? port : label}\n\t\t\t\t{this.props.port.getOptions().in ? label : port}\n\t\t\t</S.PortLabel>\n\t\t);\n\t}\n}\n","export * from './label/DefaultLabelFactory';\nexport * from './label/DefaultLabelModel';\nexport * from './label/DefaultLabelWidget';\n\nexport * from './link/DefaultLinkFactory';\nexport * from './link/DefaultLinkModel';\nexport * from './link/DefaultLinkWidget';\nexport * from './link/DefaultLinkSegmentWidget';\nexport * from './link/DefaultLinkPointWidget';\n\nexport * from './node/DefaultNodeFactory';\nexport * from './node/DefaultNodeModel';\nexport * from './node/DefaultNodeWidget';\n\nexport * from './port/DefaultPortFactory';\nexport * from './port/DefaultPortLabelWidget';\nexport * from './port/DefaultPortModel';\n","import * as React from 'react';\nimport { DefaultLabelModel } from './DefaultLabelModel';\nimport { DefaultLabelWidget } from './DefaultLabelWidget';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLabelFactory extends AbstractReactFactory<DefaultLabelModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultLabelWidget model={event.model} />;\n\t}\n\n\tgenerateModel(event): DefaultLabelModel {\n\t\treturn new DefaultLabelModel();\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkWidget } from './DefaultLinkWidget';\nimport styled from '@emotion/styled';\nimport { css, keyframes } from '@emotion/core';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nnamespace S {\n\texport const Keyframes = keyframes`\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n\n\tconst selected = css`\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${Keyframes} 1s linear infinite;\n\t`;\n\n\texport const Path = styled.path<{ selected: boolean }>`\n\t\t${(p) => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class DefaultLinkFactory<Link extends DefaultLinkModel = DefaultLinkModel> extends AbstractReactFactory<\n\tLink,\n\tDiagramEngine\n> {\n\tconstructor(type = 'default') {\n\t\tsuper(type);\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultLinkWidget link={event.model} diagramEngine={this.engine} />;\n\t}\n\n\tgenerateModel(event): Link {\n\t\treturn new DefaultLinkModel() as Link;\n\t}\n\n\tgenerateLinkSegment(model: Link, selected: boolean, path: string) {\n\t\treturn (\n\t\t\t<S.Path\n\t\t\t\tselected={selected}\n\t\t\t\tstroke={selected ? model.getOptions().selectedColor : model.getOptions().color}\n\t\t\t\tstrokeWidth={model.getOptions().width}\n\t\t\t\td={path}\n\t\t\t/>\n\t\t);\n\t}\n}\n","module.exports = require(\"@projectstorm/geometry\");","module.exports = require(\"@emotion/core\");","import * as React from 'react';\nimport { DefaultNodeModel } from './DefaultNodeModel';\nimport { DefaultNodeWidget } from './DefaultNodeWidget';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class DefaultNodeFactory extends AbstractReactFactory<DefaultNodeModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultNodeWidget engine={this.engine} node={event.model} />;\n\t}\n\n\tgenerateModel(event): DefaultNodeModel {\n\t\treturn new DefaultNodeModel();\n\t}\n}\n","import { DefaultPortModel } from './DefaultPortModel';\nimport { AbstractModelFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class DefaultPortFactory extends AbstractModelFactory<DefaultPortModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateModel(): DefaultPortModel {\n\t\treturn new DefaultPortModel({\n\t\t\tname: 'unknown'\n\t\t});\n\t}\n}\n"],"sourceRoot":""}